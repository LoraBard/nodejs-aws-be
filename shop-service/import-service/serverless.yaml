service: shop-import-service

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  apiGateway:
    minimumCompressionSize: 1024

environment:
  BUCKET: ${env:BUCKET}
  SQS_URL:
    Ref: SQSQueue

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${env:QUEUE_NAME}
    GatewayResponseUnauthorized:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId: 
          Ref: 'ApiGatewayRestApi'
    GatewayResponseAccessDenied:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: ACCESS_DENIED
        RestApiId: 
          Ref: 'ApiGatewayRestApi'
    GatewayResponseAuthorizerFailure:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: AUTHORIZER_FAILURE
        StatusCode: 401
        ResponseTemplates: 
          application/json: "{\"message\":\"Something went wrong. Check your token\"}"
        RestApiId: 
          Ref: 'ApiGatewayRestApi'


iamRoleStatements:
  - Effect: "Allow"
    Action: s3:ListBucket
    Resource: 
      - "arn:aws:s3:::shop-app-import-service"
  - Effect: "Allow"
    Action: "s3:*"
    Resource:
      - "arn:aws:s3:::shop-app-import-service/*"
  - Effect: "Allow"
    Action: "sqs:*"
    Resource: !GetAtt SQSQueue.Arn

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin

custom:
  webpack:
    webpackConfig: webpack.config.js
    includeModules:
      forceExclude:
        - aws-sdk
  dotenv:
    logging: false
    include:
      - BUCKET
      - QUEUE_NAME
      - SQS_URL

functions:
  - importProductsFile:
      handler: handlers/importProductsFile.importProductsFile
      events:
        - http:
            path: /import
            method: get
            cors: true
            authorizer:
              name: basicAuthorizer
              arn: !Sub "arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:authorization-service-dev-basicAuthorizer"
              resultTtlInSeconds: 0
              identitySource: method.request.header.Authorization
              type: token
            request:
              parametrs:
                querystrings:
                  name: true
  - importFileParser:
      handler: handlers/importFileParser.importFileParser
      events:
        - s3:
          bucket: shop-app-import-service
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
            - suffix: .csv
          existing: true